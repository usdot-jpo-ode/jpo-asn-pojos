/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id("io.freefair.lombok") version "8.11"
    id 'com.gradleup.shadow' version '8.3.6'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.2'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'info.picocli:picocli:4.7.6'
    implementation 'usdot.jpo.asn:jpo-asn-runtime'
    implementation 'usdot.jpo.asn:jpo-asn-j2735-2024'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'us.dot.its.jpo.asn.testgenerator.TestGenCli'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named("shadowJar") {
    setProperty('zip64', true)
    archiveBaseName = 'testgen'
    archiveClassifier = 'cli'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'us.dot.its.jpo.asn.testgenerator.TestGenCli'
        )
    }
    archiveBaseName = 'test-generator'
}
