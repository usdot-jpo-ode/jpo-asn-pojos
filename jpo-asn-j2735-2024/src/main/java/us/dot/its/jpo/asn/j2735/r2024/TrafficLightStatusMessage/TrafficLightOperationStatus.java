/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.TrafficLightStatusMessage;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import us.dot.its.jpo.asn.runtime.serialization.BitStringDeserializer;
import us.dot.its.jpo.asn.runtime.types.Asn1Bitstring;

@JsonDeserialize(
    using =
        us.dot.its.jpo.asn.j2735.r2024.TrafficLightStatusMessage.TrafficLightOperationStatus
            .TrafficLightOperationStatusDeserializer.class)
public class TrafficLightOperationStatus extends Asn1Bitstring {

  public boolean isManual() {
    return get(0);
  }

  public void setManual(boolean manual) {
    set(0, manual);
  }

  public boolean isFlashing() {
    return get(1);
  }

  public void setFlashing(boolean flashing) {
    set(1, flashing);
  }

  public boolean isOff() {
    return get(2);
  }

  public void setOff(boolean off) {
    set(2, off);
  }

  public boolean isActuated() {
    return get(3);
  }

  public void setActuated(boolean actuated) {
    set(3, actuated);
  }

  public boolean isTransition() {
    return get(4);
  }

  public void setTransition(boolean transition) {
    set(4, transition);
  }

  public boolean isPriority() {
    return get(5);
  }

  public void setPriority(boolean priority) {
    set(5, priority);
  }

  public boolean isHolding_phase() {
    return get(6);
  }

  public void setHolding_phase(boolean holding_phase) {
    set(6, holding_phase);
  }

  public boolean isReserved() {
    return get(7);
  }

  public void setReserved(boolean reserved) {
    set(7, reserved);
  }

  public TrafficLightOperationStatus() {
    super(
        8,
        true,
        new String[] {
          "manual",
          "flashing",
          "off",
          "actuated",
          "transition",
          "priority",
          "holding-phase",
          "reserved"
        });
  }

  public static class TrafficLightOperationStatusDeserializer
      extends BitStringDeserializer<TrafficLightOperationStatus> {
    public TrafficLightOperationStatusDeserializer() {
      super(TrafficLightOperationStatus.class);
    }

    @Override
    protected TrafficLightOperationStatus construct() {
      return new TrafficLightOperationStatus();
    }
  }
}
