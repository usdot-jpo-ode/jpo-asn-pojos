/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.J2540ITIS;

import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.AbstractMap.SimpleEntry;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;
import us.dot.its.jpo.asn.runtime.types.Asn1Integer;

public class Roadwork extends Asn1Integer {

  private static final Map<String, Long> nameValueMap =
      Map.ofEntries(
          new SimpleEntry<>("road-construction", 1025L),
          new SimpleEntry<>("major-road-construction", 1026L),
          new SimpleEntry<>("long-term-road-construction", 1027L),
          new SimpleEntry<>("construction-work", 1028L),
          new SimpleEntry<>("paving-operations", 1029L),
          new SimpleEntry<>("work-in-the-median", 1030L),
          new SimpleEntry<>("road-reconstruction", 1031L),
          new SimpleEntry<>("opposing-traffic", 1032L),
          new SimpleEntry<>("narrow-lanes", 1033L),
          new SimpleEntry<>("construction-traffic-merging", 1034L),
          new SimpleEntry<>("single-line-traffic-alternating-directions", 1035L),
          new SimpleEntry<>("road-maintenance-operations", 1036L),
          new SimpleEntry<>("road-marking-operations", 1037L),
          new SimpleEntry<>("road-widening", 1061L),
          new SimpleEntry<>("cracks", 1052L),
          new SimpleEntry<>("crack-REMOVE", 1058L),
          new SimpleEntry<>("bumps", 1053L),
          new SimpleEntry<>("drop-off", 1059L),
          new SimpleEntry<>("storm-drain", 1054L),
          new SimpleEntry<>("bridge-maintenance-operations", 1038L),
          new SimpleEntry<>("bridge-construction", 1039L),
          new SimpleEntry<>("bridge-demolition-work", 1040L),
          new SimpleEntry<>("seismic-retrofit", 1060L),
          new SimpleEntry<>("overgrown-grass", 1055L),
          new SimpleEntry<>("overgrown-brushshrubs", 1056L),
          new SimpleEntry<>("overgrown-trees", 1057L),
          new SimpleEntry<>("blasting", 1041L),
          new SimpleEntry<>("avalanche-control-activities", 1042L),
          new SimpleEntry<>("water-main-work", 1043L),
          new SimpleEntry<>("gas-main-work", 1044L),
          new SimpleEntry<>("work-on-underground-cables", 1045L),
          new SimpleEntry<>("work-on-underground-services", 1046L),
          new SimpleEntry<>("new-road-construction-layout", 1047L),
          new SimpleEntry<>("new-road-layout", 1048L),
          new SimpleEntry<>("temporary-lane-markings", 1049L),
          new SimpleEntry<>("temporary-traffic-lights", 1050L),
          new SimpleEntry<>("emergency-maintenance", 1051L),
          new SimpleEntry<>("utility-work", 1062L),
          new SimpleEntry<>("road-maintenance-cleared", 1146L),
          new SimpleEntry<>("normal-road-layout-restored", 1147L),
          new SimpleEntry<>("road-work-clearance-in-progress", 1148L),
          new SimpleEntry<>("road-construction-cleared", 1149L),
          new SimpleEntry<>("normal-traffic-lanes-restored", 1150L),
          new SimpleEntry<>("road-work-cleared", 1151L));
  private static final Map<Long, String> valueNameMap =
      nameValueMap.entrySet().stream()
          .collect(Collectors.toUnmodifiableMap(Map.Entry::getValue, Map.Entry::getKey));

  public Roadwork() {
    super(0L, 65535L);
  }

  @JsonCreator
  public Roadwork(long value) {
    this();
    this.value = value;
  }

  @Override
  public Optional<String> name() {
    return Optional.ofNullable(valueNameMap.get(value));
  }

  public static Optional<Roadwork> named(String name) {
    return Optional.ofNullable(nameValueMap.get(name)).map(Roadwork::new);
  }

  public static Set<String> names() {
    return nameValueMap.keySet();
  }

  public static Set<Long> namedValues() {
    return valueNameMap.keySet();
  }
}
