/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.CooperativeControlMessage;

import us.dot.its.jpo.asn.runtime.types.Asn1Bitstring;

public class CCMFaultMode extends Asn1Bitstring {

  public boolean isUnavailable() {
    return get(0);
  }

  public void setUnavailable(boolean unavailable) {
    set(0, unavailable);
  }

  public boolean isCommFault() {
    return get(1);
  }

  public void setCommFault(boolean commFault) {
    set(1, commFault);
  }

  public boolean isRadarFault() {
    return get(2);
  }

  public void setRadarFault(boolean radarFault) {
    set(2, radarFault);
  }

  public boolean isLidarFault() {
    return get(3);
  }

  public void setLidarFault(boolean lidarFault) {
    set(3, lidarFault);
  }

  public boolean isEngingBrkCtlFault() {
    return get(4);
  }

  public void setEngingBrkCtlFault(boolean engingBrkCtlFault) {
    set(4, engingBrkCtlFault);
  }

  public boolean isServiceBrkCtlFault() {
    return get(5);
  }

  public void setServiceBrkCtlFault(boolean serviceBrkCtlFault) {
    set(5, serviceBrkCtlFault);
  }

  public boolean isTransRetarderFault() {
    return get(6);
  }

  public void setTransRetarderFault(boolean transRetarderFault) {
    set(6, transRetarderFault);
  }

  public boolean isEngineCtlFault() {
    return get(7);
  }

  public void setEngineCtlFault(boolean engineCtlFault) {
    set(7, engineCtlFault);
  }

  public CCMFaultMode() {
    super(
        8,
        true,
        new String[] {
          "unavailable",
          "commFault",
          "radarFault",
          "lidarFault",
          "engingBrkCtlFault",
          "serviceBrkCtlFault",
          "transRetarderFault",
          "engineCtlFault"
        });
  }
}
