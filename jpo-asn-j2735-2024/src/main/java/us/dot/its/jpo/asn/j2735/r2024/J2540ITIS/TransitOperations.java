/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.J2540ITIS;

import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.AbstractMap.SimpleEntry;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;
import us.dot.its.jpo.asn.runtime.types.Asn1Integer;

public class TransitOperations extends Asn1Integer {

  private static final Map<String, Long> nameValueMap =
      Map.ofEntries(
          new SimpleEntry<>("unknown-transit-problem", 10753L),
          new SimpleEntry<>("sleeping-customer", 10754L),
          new SimpleEntry<>("assault-on-passenger", 10755L),
          new SimpleEntry<>("assault-on-employee", 10756L),
          new SimpleEntry<>("broken-seat", 10757L),
          new SimpleEntry<>("bus-alarm", 10758L),
          new SimpleEntry<>("crime-or-drug-deal", 10759L),
          new SimpleEntry<>("eating-on-board", 10760L),
          new SimpleEntry<>("equipment-problem-with-air-conditioning", 10761L),
          new SimpleEntry<>("equipment-problem-with-air-system", 10762L),
          new SimpleEntry<>("equipment-problem-with-brakes", 10763L),
          new SimpleEntry<>("equipment-problem-with-chassis-or-suspension", 10764L),
          new SimpleEntry<>("equipment-problem-with-cooling-system", 10765L),
          new SimpleEntry<>("equipment-problem-with-doors", 10766L),
          new SimpleEntry<>("equipment-problem-with-electrical", 10767L),
          new SimpleEntry<>("equipment-problem-with-engine", 10768L),
          new SimpleEntry<>("equipment-problem-with-exterior-or-body", 10769L),
          new SimpleEntry<>("equipment-problem-with-fare-collection", 10770L),
          new SimpleEntry<>("equipment-problem-with-fuel-or-exhaust", 10771L),
          new SimpleEntry<>("equipment-problem-with-horn", 10772L),
          new SimpleEntry<>("equipment-problem-with-interior", 10773L),
          new SimpleEntry<>("equipment-problem-with-liftkneeling", 10774L),
          new SimpleEntry<>("equipment-problem-with-lights", 10775L),
          new SimpleEntry<>("equipment-problem-with-lubrication", 10776L),
          new SimpleEntry<>("equipment-problem-with-radio-or-communication", 10777L),
          new SimpleEntry<>("equipment-problem-with-signs", 10778L),
          new SimpleEntry<>("equipment-problem-with-steering", 10779L),
          new SimpleEntry<>("equipment-problem-with-tires", 10780L),
          new SimpleEntry<>("equipment-problem-with-transmission", 10781L),
          new SimpleEntry<>("equipment-problem-with-unknown-alarm", 10782L),
          new SimpleEntry<>("equipment-problem-with-wipers", 10783L),
          new SimpleEntry<>("fare-dispute-expired-pass", 10784L),
          new SimpleEntry<>("fare-dispute-expired-transfer", 10785L),
          new SimpleEntry<>("fare-dispute-expired-upgrade", 10786L),
          new SimpleEntry<>("fare-dispute-other", 10787L),
          new SimpleEntry<>("fare-dispute-refuses-to-pay", 10788L),
          new SimpleEntry<>("lift-passenger-cycle-completed", 10789L),
          new SimpleEntry<>("lift-passenger-ready-to-alight", 10790L),
          new SimpleEntry<>("lift-passenger-ready-to-board", 10791L),
          new SimpleEntry<>("lost-article", 10792L),
          new SimpleEntry<>("objects-thrown", 10793L),
          new SimpleEntry<>("passenger-accident-alighting", 10794L),
          new SimpleEntry<>("passenger-accident-boarding", 10795L),
          new SimpleEntry<>("passenger-accident-fallen-on-board", 10796L),
          new SimpleEntry<>("passenger-load", 10797L),
          new SimpleEntry<>("passenger-accident-other", 10798L),
          new SimpleEntry<>("passenger-sick-or-injured", 10799L),
          new SimpleEntry<>("right-of-way", 10800L),
          new SimpleEntry<>("theft", 10801L),
          new SimpleEntry<>("theft-of-service", 10802L),
          new SimpleEntry<>("waiting-to-get-relief-for-schedule-break", 10803L),
          new SimpleEntry<>("waiting-to-get-relief-after-run-is-finished", 10804L),
          new SimpleEntry<>("waiting-to-provide-relief", 10805L));
  private static final Map<Long, String> valueNameMap =
      nameValueMap.entrySet().stream()
          .collect(Collectors.toUnmodifiableMap(Map.Entry::getValue, Map.Entry::getKey));

  public TransitOperations() {
    super(0L, 65535L);
  }

  @JsonCreator
  public TransitOperations(long value) {
    this();
    this.value = value;
  }

  @Override
  public Optional<String> name() {
    return Optional.ofNullable(valueNameMap.get(value));
  }

  public static Optional<TransitOperations> named(String name) {
    return Optional.ofNullable(nameValueMap.get(name)).map(TransitOperations::new);
  }

  public static Set<String> names() {
    return nameValueMap.keySet();
  }

  public static Set<Long> namedValues() {
    return valueNameMap.keySet();
  }
}
