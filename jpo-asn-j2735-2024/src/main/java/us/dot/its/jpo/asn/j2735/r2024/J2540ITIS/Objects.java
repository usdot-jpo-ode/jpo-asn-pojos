/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.J2540ITIS;

import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.AbstractMap.SimpleEntry;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;
import us.dot.its.jpo.asn.runtime.types.Asn1Integer;

public class Objects extends Asn1Integer {

  private static final Map<String, Long> nameValueMap =
      Map.ofEntries(
          new SimpleEntry<>("unknown-object", 11009L),
          new SimpleEntry<>("tire", 11010L),
          new SimpleEntry<>("rim", 11011L),
          new SimpleEntry<>("retread", 11012L),
          new SimpleEntry<>("trash", 11013L),
          new SimpleEntry<>("cargo", 11014L),
          new SimpleEntry<>("diesel", 11015L),
          new SimpleEntry<>("gasoline", 11016L),
          new SimpleEntry<>("anti-freeze", 11017L),
          new SimpleEntry<>("propane-gas", 11061L),
          new SimpleEntry<>("alternative-fuel", 11060L),
          new SimpleEntry<>("seat-belts", 11018L),
          new SimpleEntry<>("litter-container", 11019L),
          new SimpleEntry<>("all-Terrain-vehicle", 11020L),
          new SimpleEntry<>("seaplane", 11021L),
          new SimpleEntry<>("chairlift", 11022L),
          new SimpleEntry<>("fishing-pier", 11023L),
          new SimpleEntry<>("telephone", 11025L),
          new SimpleEntry<>("railroad-cross-buck", 11024L),
          new SimpleEntry<>("horn", 11048L),
          new SimpleEntry<>("train", 11047L),
          new SimpleEntry<>("deer", 11049L),
          new SimpleEntry<>("horse", 11051L),
          new SimpleEntry<>("cattle", 11050L),
          new SimpleEntry<>("golf-cart", 11052L),
          new SimpleEntry<>("services", 11056L),
          new SimpleEntry<>("motorist-services", 11059L),
          new SimpleEntry<>("food-services", 11053L),
          new SimpleEntry<>("roadside-table", 11055L),
          new SimpleEntry<>("ambulance-staging-point", 11054L),
          new SimpleEntry<>("fallout", 11026L),
          new SimpleEntry<>("medical", 11027L),
          new SimpleEntry<>("chemical", 11028L),
          new SimpleEntry<>("welfare", 11029L),
          new SimpleEntry<>("decontamination", 11063L),
          new SimpleEntry<>("evacuation", 11030L),
          new SimpleEntry<>("registration", 11062L),
          new SimpleEntry<>("emergency", 11064L),
          new SimpleEntry<>("left-arrow-signal", 11031L),
          new SimpleEntry<>("ahead-arrow-signal", 11032L),
          new SimpleEntry<>("right-arrow-signal", 11033L),
          new SimpleEntry<>("green-light-signal", 11034L),
          new SimpleEntry<>("green-arrow-signal", 11035L),
          new SimpleEntry<>("yellow-light-signal", 11036L),
          new SimpleEntry<>("yellow-arrow-signal", 11037L),
          new SimpleEntry<>("red-light-signal", 11038L),
          new SimpleEntry<>("red-arrow-signal", 11039L),
          new SimpleEntry<>("extended-green-signal", 11040L),
          new SimpleEntry<>("advance-arrow-signal", 11041L),
          new SimpleEntry<>("pedestrian-Signal-Stop", 11042L),
          new SimpleEntry<>("pedestrian-Signal-Caution", 11043L),
          new SimpleEntry<>("pedestrian-Signal-Walk", 11044L),
          new SimpleEntry<>("pedestrian-Signal-Light", 11045L),
          new SimpleEntry<>("pedestrian-Signal-Time-Display", 11046L));
  private static final Map<Long, String> valueNameMap =
      nameValueMap.entrySet().stream()
          .collect(Collectors.toUnmodifiableMap(Map.Entry::getValue, Map.Entry::getKey));

  public Objects() {
    super(0L, 65535L);
  }

  @JsonCreator
  public Objects(long value) {
    this();
    this.value = value;
  }

  @Override
  public Optional<String> name() {
    return Optional.ofNullable(valueNameMap.get(value));
  }

  public static Optional<Objects> named(String name) {
    return Optional.ofNullable(nameValueMap.get(name)).map(Objects::new);
  }

  public static Set<String> names() {
    return nameValueMap.keySet();
  }

  public static Set<Long> namedValues() {
    return valueNameMap.keySet();
  }
}
