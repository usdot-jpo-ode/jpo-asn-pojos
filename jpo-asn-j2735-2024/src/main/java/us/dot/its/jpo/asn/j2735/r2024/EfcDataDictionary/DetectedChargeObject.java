/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.EfcDataDictionary;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import us.dot.its.jpo.asn.runtime.annotations.Asn1Property;
import us.dot.its.jpo.asn.runtime.types.Asn1GeneralizedTime;
import us.dot.its.jpo.asn.runtime.types.Asn1Sequence;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@ToString(callSuper = true)
@Getter
@Setter
public class DetectedChargeObject extends Asn1Sequence {

  @Asn1Property(tag = 0, name = "chargeObjectId")
  @JsonProperty("chargeObjectId")
  private ChargeObjectId chargeObjectId;

  @Asn1Property(tag = 1, name = "subObjectNumber", optional = true)
  @JsonProperty("subObjectNumber")
  private Int4Unsigned subObjectNumber;

  @Asn1Property(tag = 2, name = "timeWhenUsed", optional = true)
  @JsonProperty("timeWhenUsed")
  private Asn1GeneralizedTime timeWhenUsed;

  @Asn1Property(tag = 3, name = "mileageWhenUsed", optional = true)
  @JsonProperty("mileageWhenUsed")
  private Distance mileageWhenUsed;

  @Asn1Property(tag = 4, name = "currentTariffClass", optional = true)
  @JsonProperty("currentTariffClass")
  private TariffClassDescription currentTariffClass;

  @Asn1Property(tag = 5, name = "vehicleDescription", optional = true)
  @JsonProperty("vehicleDescription")
  private VehicleDescription vehicleDescription;

  @Asn1Property(tag = 6, name = "obeStatus", optional = true)
  @JsonProperty("obeStatus")
  private Int1Unsigned obeStatus;

  @Asn1Property(tag = 7, name = "feeExclVat", optional = true)
  @JsonProperty("feeExclVat")
  private PaymentFee feeExclVat;

  @Asn1Property(tag = 8, name = "sumVat", optional = true)
  @JsonProperty("sumVat")
  private PaymentFee sumVat;

  @Asn1Property(tag = 9, name = "chargeObjDetectionMode", optional = true)
  @JsonProperty("chargeObjDetectionMode")
  private DetectionMode chargeObjDetectionMode;

  public DetectedChargeObject() {}

  @Override
  public boolean hasExtensionMarker() {
    return true;
  }
}
