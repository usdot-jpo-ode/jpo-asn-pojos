/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.ManeuverSharingAndCoordinatingMessage;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import lombok.Getter;
import lombok.Setter;
import us.dot.its.jpo.asn.j2735.r2024.Common.DDateTime;
import us.dot.its.jpo.asn.j2735.r2024.Common.Position3D;
import us.dot.its.jpo.asn.j2735.r2024.Common.PositionalAccuracy;
import us.dot.its.jpo.asn.j2735.r2024.Common.TemporaryID;
import us.dot.its.jpo.asn.runtime.annotations.Asn1Property;
import us.dot.its.jpo.asn.runtime.types.Asn1Sequence;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class ManeuverSharingAndCoordinatingMessage extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "mSCMTimestamp")
	@JsonProperty("mSCMTimestamp")
	private DDateTime mSCMTimestamp;
	@Asn1Property(tag = 1, name = "hVPos", optional = true)
	@JsonProperty("hVPos")
	private Position3D hVPos;
	@Asn1Property(tag = 2, name = "hVPosXYConf", optional = true)
	@JsonProperty("hVPosXYConf")
	private PositionalAccuracy hVPosXYConf;
	@Asn1Property(tag = 3, name = "mSCMType")
	@JsonProperty("mSCMType")
	private MSCMType mSCMType;
	@Asn1Property(tag = 4, name = "sourceID")
	@JsonProperty("sourceID")
	private TemporaryID sourceID;
	@Asn1Property(tag = 5, name = "destinationIDs", optional = true)
	@JsonProperty("destinationIDs")
	@JacksonXmlElementWrapper(localName = "destinationIDs")
	@JacksonXmlProperty(localName = "TemporaryID")
	private TemporaryIDList destinationIDs;
	@Asn1Property(tag = 6, name = "maneuverID", optional = true)
	@JsonProperty("maneuverID")
	private ManeuverID maneuverID;
	@Asn1Property(tag = 7, name = "maneuver", optional = true)
	@JsonProperty("maneuver")
	private Maneuver maneuver;
	@Asn1Property(tag = 8, name = "responseFlag", optional = true)
	@JsonProperty("responseFlag")
	private ResponseFlag responseFlag;
	@Asn1Property(tag = 9, name = "reasonCode", optional = true)
	@JsonProperty("reasonCode")
	private ReasonCode reasonCode;
	@Asn1Property(tag = 10, name = "maneuverExecutionStatus", optional = true)
	@JsonProperty("maneuverExecutionStatus")
	private ManeuverExecutionStatus maneuverExecutionStatus;

	public ManeuverSharingAndCoordinatingMessage() {
		super(true);
	}
}