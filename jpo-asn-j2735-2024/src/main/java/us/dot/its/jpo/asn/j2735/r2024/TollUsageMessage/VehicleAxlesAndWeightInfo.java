//
//  **MANUAL EDIT**
/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.TollUsageMessage;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import us.dot.its.jpo.asn.runtime.annotations.Asn1Property;
import us.dot.its.jpo.asn.runtime.serialization.EnumeratedDeserializer;
import us.dot.its.jpo.asn.runtime.serialization.EnumeratedSerializer;
import us.dot.its.jpo.asn.runtime.serialization.NestedSequenceOfDeserializer;
import us.dot.its.jpo.asn.runtime.serialization.NestedSequenceOfSerializer;
import us.dot.its.jpo.asn.runtime.types.Asn1Enumerated;
import us.dot.its.jpo.asn.runtime.types.Asn1Integer;
import us.dot.its.jpo.asn.runtime.types.Asn1Sequence;
import us.dot.its.jpo.asn.runtime.types.Asn1SequenceOf;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@ToString(callSuper = true)
@Getter
@Setter
public class VehicleAxlesAndWeightInfo extends Asn1Sequence {

  @Asn1Property(tag = 0, name = "vehNumAxles")
  @JsonProperty("vehNumAxles")
  private VehNumAxlesInteger vehNumAxles;

  @Asn1Property(tag = 1, name = "vehWeightPerAxle")
  @JsonProperty("vehWeightPerAxle")
  @JsonSerialize(using = SequenceOfVehWeightPerAxleSerializer.class)  // ADDED
  @JsonDeserialize(using = SequenceOfVehWeightPerAxleDeserializer.class) // ADDED
  private SequenceOfVehWeightPerAxle vehWeightPerAxle;

  @Asn1Property(tag = 2, name = "vehTotalWeight")
  @JsonProperty("vehTotalWeight")
  private VehTotalWeightInteger vehTotalWeight;

  @Asn1Property(tag = 3, name = "vehWeightUnits")
  @JsonProperty("vehWeightUnits")
  private EnumeratedVehWeightUnits vehWeightUnits;

  public static class VehNumAxlesInteger extends Asn1Integer {
    public VehNumAxlesInteger() {
      super(1L, 10L);
    }

    @JsonCreator
    public VehNumAxlesInteger(long value) {
      this();
      this.value = value;
    }
  }

  @JsonInclude(Include.NON_NULL)
  public static class SequenceOfVehWeightPerAxle
      extends Asn1SequenceOf<SequenceOfVehWeightPerAxleInteger> {
    public SequenceOfVehWeightPerAxle() {
      super(SequenceOfVehWeightPerAxleInteger.class, 1L, 10L);
    }
  }

  // ADDED
  public static class SequenceOfVehWeightPerAxleSerializer
    extends NestedSequenceOfSerializer<SequenceOfVehWeightPerAxle> {
    protected SequenceOfVehWeightPerAxleSerializer() {
      super(SequenceOfVehWeightPerAxle.class, "INTEGER");
    }
  }

  // ADDED
  public static class SequenceOfVehWeightPerAxleDeserializer
    extends NestedSequenceOfDeserializer<SequenceOfVehWeightPerAxle> {
    protected SequenceOfVehWeightPerAxleDeserializer() {
      super(SequenceOfVehWeightPerAxle.class, "INTEGER");
    }
  }

  public static class SequenceOfVehWeightPerAxleInteger extends Asn1Integer {
    public SequenceOfVehWeightPerAxleInteger() {
      super(0L, 65535L);
    }

    @JsonCreator
    public SequenceOfVehWeightPerAxleInteger(long value) {
      this();
      this.value = value;
    }
  }

  public static class VehTotalWeightInteger extends Asn1Integer {
    public VehTotalWeightInteger() {
      super(0L, 16777215L);
    }

    @JsonCreator
    public VehTotalWeightInteger(long value) {
      this();
      this.value = value;
    }
  }

  @Getter
  @JsonSerialize(using = EnumeratedVehWeightUnitsSerializer.class)
  @JsonDeserialize(using = EnumeratedVehWeightUnitsDeserializer.class)
  public enum EnumeratedVehWeightUnits implements Asn1Enumerated {
    POUNDS(0, "pounds"),
    KILOGRAMS(1, "kilograms");

    private final int index;
    private final String name;

    private EnumeratedVehWeightUnits(int index, String name) {
      this.index = index;
      this.name = name;
    }
  }

  public static class EnumeratedVehWeightUnitsSerializer
      extends EnumeratedSerializer<EnumeratedVehWeightUnits> {
    public EnumeratedVehWeightUnitsSerializer() {
      super(EnumeratedVehWeightUnits.class);
    }
  }

  public static class EnumeratedVehWeightUnitsDeserializer
      extends EnumeratedDeserializer<EnumeratedVehWeightUnits> {
    public EnumeratedVehWeightUnitsDeserializer() {
      super(EnumeratedVehWeightUnits.class);
    }

    @Override
    protected EnumeratedVehWeightUnits[] listEnumValues() {
      return EnumeratedVehWeightUnits.values();
    }
  }

  public VehicleAxlesAndWeightInfo() {}

  @Override
  public boolean hasExtensionMarker() {
    return true;
  }
}
