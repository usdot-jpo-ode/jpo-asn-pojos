/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.ProbeDataConfig;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import lombok.Getter;
import lombok.Setter;
import us.dot.its.jpo.asn.j2735.r2024.Common.IntersectionID;
import us.dot.its.jpo.asn.runtime.annotations.Asn1Property;
import us.dot.its.jpo.asn.runtime.types.Asn1Boolean;
import us.dot.its.jpo.asn.runtime.types.Asn1Integer;
import us.dot.its.jpo.asn.runtime.types.Asn1Sequence;
import us.dot.its.jpo.asn.runtime.types.Asn1SequenceOf;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class CfgTrafficSigEncounters extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "intersections", optional = true)
	@JsonProperty("intersections")
	@JacksonXmlElementWrapper(localName = "intersections")
	@JacksonXmlProperty(localName = "IntersectionID")
	private SequenceOfIntersections intersections;
	@Asn1Property(tag = 1, name = "trfcsigApproachDelay", optional = true)
	@JsonProperty("trfcsigApproachDelay")
	private TrfcsigApproachDelayInteger trfcsigApproachDelay;
	@Asn1Property(tag = 2, name = "trfsigApproachSpeed", optional = true)
	@JsonProperty("trfsigApproachSpeed")
	private TrfsigApproachSpeedInteger trfsigApproachSpeed;
	@Asn1Property(tag = 3, name = "trfsigArrivalGreen", optional = true)
	@JsonProperty("trfsigArrivalGreen")
	private Asn1Boolean trfsigArrivalGreen;
	@Asn1Property(tag = 4, name = "trfsigArrivalRed", optional = true)
	@JsonProperty("trfsigArrivalRed")
	private Asn1Boolean trfsigArrivalRed;
	@Asn1Property(tag = 5, name = "trfsigPedDelay", optional = true)
	@JsonProperty("trfsigPedDelay")
	private TrfsigPedDelayInteger trfsigPedDelay;
	@Asn1Property(tag = 6, name = "trfsigSpatMismatch", optional = true)
	@JsonProperty("trfsigSpatMismatch")
	private Asn1Boolean trfsigSpatMismatch;
	@Asn1Property(tag = 7, name = "trfsigSpatTimingError", optional = true)
	@JsonProperty("trfsigSpatTimingError")
	private Asn1Boolean trfsigSpatTimingError;

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfIntersections extends Asn1SequenceOf<IntersectionID> {
		public SequenceOfIntersections() {
			super(IntersectionID.class, 1L, 100L);
		}
	}

	public static class TrfcsigApproachDelayInteger extends Asn1Integer {
		public TrfcsigApproachDelayInteger() {
			super(1L, 3600L);
		}

		@JsonCreator
		public TrfcsigApproachDelayInteger(long value) {
			this();
			this.value = value;
		}
	}

	public static class TrfsigApproachSpeedInteger extends Asn1Integer {
		public TrfsigApproachSpeedInteger() {
			super(1L, 200L);
		}

		@JsonCreator
		public TrfsigApproachSpeedInteger(long value) {
			this();
			this.value = value;
		}
	}

	public static class TrfsigPedDelayInteger extends Asn1Integer {
		public TrfsigPedDelayInteger() {
			super(1L, 300L);
		}

		@JsonCreator
		public TrfsigPedDelayInteger(long value) {
			this();
			this.value = value;
		}
	}

	public CfgTrafficSigEncounters() {
		super(true);
	}
}