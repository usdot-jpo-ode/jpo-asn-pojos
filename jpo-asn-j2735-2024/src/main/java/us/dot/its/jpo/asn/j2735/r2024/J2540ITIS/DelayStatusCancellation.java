/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.J2540ITIS;

import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import us.dot.its.jpo.asn.runtime.types.Asn1Integer;

public class DelayStatusCancellation extends Asn1Integer {

  private static final NamedValues namedValues = new NamedValues();

  public DelayStatusCancellation() {
    super(0L, 65535L);
  }

  @JsonCreator
  public DelayStatusCancellation(long value) {
    this();
    this.setValue(value);
  }

  private static class NamedValues {
    private final Map<String, Long> nameMap;
    private final Map<Long, String> valueMap;

    public NamedValues() {
      var mapBuilder = new LinkedHashMap<String, Long>();
      mapBuilder.put("delays", 1537L);
      mapBuilder.put("short-delays", 1538L);
      mapBuilder.put("long-delays", 1539L);
      mapBuilder.put("very-long-delays", 1540L);
      mapBuilder.put("delays-of-uncertain-duration", 1541L);
      mapBuilder.put("delayed-until-further-notice", 1542L);
      mapBuilder.put("busy", 1543L);
      mapBuilder.put("very-busy", 1544L);
      mapBuilder.put("crowded", 1545L);
      mapBuilder.put("overcrowded", 1546L);
      mapBuilder.put("cancellations", 1547L);
      mapBuilder.put("route-canceled-and-no-replacement", 1548L);
      mapBuilder.put("service-canceled", 1549L);
      mapBuilder.put("service-suspended", 1550L);
      mapBuilder.put("service-withdrawn", 1551L);
      mapBuilder.put("service-fully-booked", 1552L);
      mapBuilder.put("all-services-fully-booked", 1553L);
      mapBuilder.put("next-departure", 1554L);
      mapBuilder.put("next-arrival", 1555L);
      mapBuilder.put("very-frequent-service", 1556L);
      mapBuilder.put("frequent-service", 1557L);
      mapBuilder.put("fairly-frequent-service", 1558L);
      mapBuilder.put("regular-service", 1559L);
      mapBuilder.put("irregular-service", 1560L);
      mapBuilder.put("not-operating", 1561L);
      mapBuilder.put("system-busy", 1562L);
      mapBuilder.put("system-very-busy", 1563L);
      mapBuilder.put("system-crowded", 1564L);
      mapBuilder.put("system-overcrowded", 1565L);
      mapBuilder.put("deleted-travel-time", 1566L);
      mapBuilder.put("headway", 1567L);
      mapBuilder.put("extra-services-in-operation", 1568L);
      mapBuilder.put("delays-clearing", 1660L);
      mapBuilder.put("delays-cleared", 1661L);
      mapBuilder.put("normal-services-resumed", 1662L);
      mapBuilder.put("operating", 1663L);
      nameMap = Collections.unmodifiableMap(mapBuilder);
      final var valueMapBuilder = new LinkedHashMap<Long, String>();
      mapBuilder.forEach((k, v) -> valueMapBuilder.put(v, k));
      valueMap = Collections.unmodifiableMap(valueMapBuilder);
    }
  }

  @Override
  public Optional<String> name() {
    return Optional.ofNullable(namedValues.valueMap.get(getValue()));
  }

  public static Optional<DelayStatusCancellation> named(String name) {
    return Optional.ofNullable(namedValues.nameMap.get(name)).map(DelayStatusCancellation::new);
  }

  public static Set<String> names() {
    return namedValues.nameMap.keySet();
  }

  public static Set<Long> namedValues() {
    return namedValues.valueMap.keySet();
  }
}
