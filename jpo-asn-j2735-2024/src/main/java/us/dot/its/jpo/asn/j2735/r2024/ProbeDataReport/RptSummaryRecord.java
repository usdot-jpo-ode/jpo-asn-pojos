/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.ProbeDataReport;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import us.dot.its.jpo.asn.runtime.annotations.Asn1Property;
import us.dot.its.jpo.asn.runtime.types.Asn1Integer;
import us.dot.its.jpo.asn.runtime.types.Asn1Sequence;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@ToString(callSuper = true)
@Getter
@Setter
public class RptSummaryRecord extends Asn1Sequence {

  @Asn1Property(tag = 0, name = "regTravelTime", optional = true)
  @JsonProperty("regTravelTime")
  private RegTravelTimeInteger regTravelTime;

  @Asn1Property(tag = 1, name = "regVehDistTraveled", optional = true)
  @JsonProperty("regVehDistTraveled")
  private RegVehDistTraveledInteger regVehDistTraveled;

  @Asn1Property(tag = 2, name = "regVehTimeTraveled", optional = true)
  @JsonProperty("regVehTimeTraveled")
  private RegVehTimeTraveledInteger regVehTimeTraveled;

  @Asn1Property(tag = 3, name = "fuelConsumption", optional = true)
  @JsonProperty("fuelConsumption")
  private FuelConsumptionInteger fuelConsumption;

  @Asn1Property(tag = 4, name = "totalVehEmissions", optional = true)
  @JsonProperty("totalVehEmissions")
  private RptEmissions totalVehEmissions;

  @Asn1Property(tag = 5, name = "numOfLowSpeedEvents", optional = true)
  @JsonProperty("numOfLowSpeedEvents")
  private NumOfLowSpeedEventsInteger numOfLowSpeedEvents;

  @Asn1Property(tag = 6, name = "timeStopped", optional = true)
  @JsonProperty("timeStopped")
  private TimeStoppedInteger timeStopped;

  @Asn1Property(tag = 7, name = "numOfStopped", optional = true)
  @JsonProperty("numOfStopped")
  private NumOfStoppedInteger numOfStopped;

  @Asn1Property(tag = 8, name = "locOfStops", optional = true)
  @JsonProperty("locOfStops")
  private RptLocOfStops locOfStops;

  @Asn1Property(tag = 9, name = "regNumOfVehPassed", optional = true)
  @JsonProperty("regNumOfVehPassed")
  private RegNumOfVehPassedInteger regNumOfVehPassed;

  @Asn1Property(tag = 10, name = "regNumOfSurpassedVeh", optional = true)
  @JsonProperty("regNumOfSurpassedVeh")
  private RegNumOfSurpassedVehInteger regNumOfSurpassedVeh;

  @Asn1Property(tag = 11, name = "totalMsgsReceived", optional = true)
  @JsonProperty("totalMsgsReceived")
  private TotalMsgsReceivedInteger totalMsgsReceived;

  public static class RegTravelTimeInteger extends Asn1Integer {
    public RegTravelTimeInteger() {
      super(1L, 3600L);
    }

    @JsonCreator
    public RegTravelTimeInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public static class RegVehDistTraveledInteger extends Asn1Integer {
    public RegVehDistTraveledInteger() {
      super(1L, 500L);
    }

    @JsonCreator
    public RegVehDistTraveledInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public static class RegVehTimeTraveledInteger extends Asn1Integer {
    public RegVehTimeTraveledInteger() {
      super(1L, 3600L);
    }

    @JsonCreator
    public RegVehTimeTraveledInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public static class FuelConsumptionInteger extends Asn1Integer {
    public FuelConsumptionInteger() {
      super(1L, 255L);
    }

    @JsonCreator
    public FuelConsumptionInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public static class NumOfLowSpeedEventsInteger extends Asn1Integer {
    public NumOfLowSpeedEventsInteger() {
      super(1L, 255L);
    }

    @JsonCreator
    public NumOfLowSpeedEventsInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public static class TimeStoppedInteger extends Asn1Integer {
    public TimeStoppedInteger() {
      super(1L, 36000L);
    }

    @JsonCreator
    public TimeStoppedInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public static class NumOfStoppedInteger extends Asn1Integer {
    public NumOfStoppedInteger() {
      super(1L, 255L);
    }

    @JsonCreator
    public NumOfStoppedInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public static class RegNumOfVehPassedInteger extends Asn1Integer {
    public RegNumOfVehPassedInteger() {
      super(1L, 255L);
    }

    @JsonCreator
    public RegNumOfVehPassedInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public static class RegNumOfSurpassedVehInteger extends Asn1Integer {
    public RegNumOfSurpassedVehInteger() {
      super(1L, 255L);
    }

    @JsonCreator
    public RegNumOfSurpassedVehInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public static class TotalMsgsReceivedInteger extends Asn1Integer {
    public TotalMsgsReceivedInteger() {
      super(1L, 255L);
    }

    @JsonCreator
    public TotalMsgsReceivedInteger(long value) {
      this();
      this.setValue(value);
    }
  }

  public RptSummaryRecord() {}

  @Override
  public boolean hasExtensionMarker() {
    return true;
  }
}
