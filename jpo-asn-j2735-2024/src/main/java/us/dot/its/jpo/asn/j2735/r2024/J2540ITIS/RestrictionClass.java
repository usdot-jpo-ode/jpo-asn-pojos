/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.J2540ITIS;

import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.AbstractMap.SimpleEntry;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;
import us.dot.its.jpo.asn.runtime.types.Asn1Integer;

public class RestrictionClass extends Asn1Integer {

  private static final Map<String, Long> nameValueMap =
      Map.ofEntries(
          new SimpleEntry<>("restrictions", 2561L),
          new SimpleEntry<>("ramp-restrictions", 2562L),
          new SimpleEntry<>("truck-restriction", 2563L),
          new SimpleEntry<>("speed-restriction", 2564L),
          new SimpleEntry<>("noise-restriction", 2565L),
          new SimpleEntry<>("traffic-regulations-have-been-changed", 2566L),
          new SimpleEntry<>("local-access-only", 2567L),
          new SimpleEntry<>("no-trailers", 2568L),
          new SimpleEntry<>("no-high-profile-vehicles", 2569L),
          new SimpleEntry<>("hazardous-materials-truck-restriction", 2570L),
          new SimpleEntry<>("no-through-traffic", 2571L),
          new SimpleEntry<>("no-motor-vehicles", 2572L),
          new SimpleEntry<>("width-limit", 2573L),
          new SimpleEntry<>("height-limit", 2574L),
          new SimpleEntry<>("length-limit", 2575L),
          new SimpleEntry<>("axle-load-limit", 2576L),
          new SimpleEntry<>("gross-weight-limit", 2577L),
          new SimpleEntry<>("axle-count-limit", 2578L),
          new SimpleEntry<>("carpool-lane-available", 2579L),
          new SimpleEntry<>("carpool-restrictions-changed", 2580L),
          new SimpleEntry<>("hOV-2-no-single-occupant-vehicles", 2581L),
          new SimpleEntry<>("hOV-3-no-vehicles-with-less-than-three-occupants", 2582L),
          new SimpleEntry<>("bus-lane-available-for-all-vehicles", 2583L),
          new SimpleEntry<>("truck-lane-available-for-all-vehicles", 2584L),
          new SimpleEntry<>("permits-call-in-basis", 2585L),
          new SimpleEntry<>("permits-temporarily-closed", 2586L),
          new SimpleEntry<>("permits-closed", 2587L),
          new SimpleEntry<>("road-use-permits-required", 2588L),
          new SimpleEntry<>("permits-open", 2675L),
          new SimpleEntry<>("restrictions-for-high-profile-vehicles-lifted", 2676L),
          new SimpleEntry<>("width-limit-lifted", 2677L),
          new SimpleEntry<>("height-limit-lifted", 2678L),
          new SimpleEntry<>("length-limit-lifted", 2679L),
          new SimpleEntry<>("axle-load-limit-lifted", 2680L),
          new SimpleEntry<>("weight-limit-lifted", 2681L),
          new SimpleEntry<>("axle-count-limit-lifted", 2682L),
          new SimpleEntry<>("carpool-restrictions-lifted", 2683L),
          new SimpleEntry<>("lane-restrictions-lifted", 2684L),
          new SimpleEntry<>("ramp-restrictions-lifted", 2685L),
          new SimpleEntry<>("motor-vehicle-restrictions-lifted", 2686L),
          new SimpleEntry<>("restrictions-lifted", 2687L));
  private static final Map<Long, String> valueNameMap =
      nameValueMap.entrySet().stream()
          .collect(Collectors.toUnmodifiableMap(Map.Entry::getValue, Map.Entry::getKey));

  public RestrictionClass() {
    super(0L, 65535L);
  }

  @JsonCreator
  public RestrictionClass(long value) {
    this();
    this.value = value;
  }

  @Override
  public Optional<String> name() {
    return Optional.ofNullable(valueNameMap.get(value));
  }

  public static Optional<RestrictionClass> named(String name) {
    return Optional.ofNullable(nameValueMap.get(name)).map(RestrictionClass::new);
  }

  public static Set<String> names() {
    return nameValueMap.keySet();
  }

  public static Set<Long> namedValues() {
    return valueNameMap.keySet();
  }
}
