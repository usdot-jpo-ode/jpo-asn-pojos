/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.SPAT;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import us.dot.its.jpo.asn.j2735.r2024.Common.DSecond;
import us.dot.its.jpo.asn.j2735.r2024.Common.DescriptiveName;
import us.dot.its.jpo.asn.j2735.r2024.Common.IntersectionReferenceID;
import us.dot.its.jpo.asn.j2735.r2024.Common.MinuteOfTheYear;
import us.dot.its.jpo.asn.j2735.r2024.Common.MsgCount;
import us.dot.its.jpo.asn.j2735.r2024.Common.RoadAuthorityID;
import us.dot.its.jpo.asn.j2735.r2024.REGION.Reg_IntersectionState;
import us.dot.its.jpo.asn.runtime.annotations.Asn1Property;
import us.dot.its.jpo.asn.runtime.types.Asn1Sequence;
import us.dot.its.jpo.asn.runtime.types.Asn1SequenceOf;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@ToString(callSuper = true)
@Getter
@Setter
public class IntersectionState extends Asn1Sequence {

  @Asn1Property(tag = 0, name = "name", optional = true)
  @JsonProperty("name")
  private DescriptiveName name;

  @Asn1Property(tag = 1, name = "id")
  @JsonProperty("id")
  private IntersectionReferenceID id;

  @Asn1Property(tag = 2, name = "revision")
  @JsonProperty("revision")
  private MsgCount revision;

  @Asn1Property(tag = 3, name = "status")
  @JsonProperty("status")
  private IntersectionStatusObject status;

  @Asn1Property(tag = 4, name = "moy", optional = true)
  @JsonProperty("moy")
  private MinuteOfTheYear moy;

  @Asn1Property(tag = 5, name = "timeStamp", optional = true)
  @JsonProperty("timeStamp")
  private DSecond timeStamp;

  @Asn1Property(tag = 6, name = "enabledLanes", optional = true)
  @JsonProperty("enabledLanes")
  @JacksonXmlElementWrapper(localName = "enabledLanes")
  @JacksonXmlProperty(localName = "LaneID")
  private EnabledLaneList enabledLanes;

  @Asn1Property(tag = 7, name = "states")
  @JsonProperty("states")
  @JacksonXmlElementWrapper(localName = "states")
  @JacksonXmlProperty(localName = "MovementState")
  private MovementList states;

  @Asn1Property(tag = 8, name = "maneuverAssistList", optional = true)
  @JsonProperty("maneuverAssistList")
  @JacksonXmlElementWrapper(localName = "maneuverAssistList")
  @JacksonXmlProperty(localName = "ConnectionManeuverAssist")
  private ManeuverAssistList maneuverAssistList;

  @Asn1Property(tag = 9, name = "regional", optional = true)
  @JsonProperty("regional")
  @JacksonXmlElementWrapper(localName = "regional")
  @JacksonXmlProperty(localName = "Reg-IntersectionState")
  private SequenceOfRegional regional;

  @Asn1Property(tag = 10, name = "roadAuthorityID", optional = true, extension = true)
  @JsonProperty("roadAuthorityID")
  private RoadAuthorityID roadAuthorityID;

  @JsonInclude(Include.NON_NULL)
  public static class SequenceOfRegional extends Asn1SequenceOf<Reg_IntersectionState> {
    public SequenceOfRegional() {
      super(Reg_IntersectionState.class, 1L, 4L);
    }
  }

  public IntersectionState() {
  }

  @Override
  public boolean hasExtensionMarker() {
    return true;
  }
}
