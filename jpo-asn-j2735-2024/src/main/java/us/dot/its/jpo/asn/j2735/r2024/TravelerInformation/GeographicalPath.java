/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.TravelerInformation;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import lombok.Getter;
import lombok.Setter;
import us.dot.its.jpo.asn.j2735.r2024.Common.DescriptiveName;
import us.dot.its.jpo.asn.j2735.r2024.Common.HeadingSlice;
import us.dot.its.jpo.asn.j2735.r2024.Common.LaneWidth;
import us.dot.its.jpo.asn.j2735.r2024.Common.Position3D;
import us.dot.its.jpo.asn.j2735.r2024.Common.RoadSegmentReferenceID;
import us.dot.its.jpo.asn.j2735.r2024.REGION.Reg_GeographicalPath;
import us.dot.its.jpo.asn.runtime.annotations.Asn1Property;
import us.dot.its.jpo.asn.runtime.types.Asn1Boolean;
import us.dot.its.jpo.asn.runtime.types.Asn1Choice;
import us.dot.its.jpo.asn.runtime.types.Asn1Sequence;
import us.dot.its.jpo.asn.runtime.types.Asn1SequenceOf;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class GeographicalPath extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "name", optional = true)
	@JsonProperty("name")
	private DescriptiveName name;
	@Asn1Property(tag = 1, name = "id", optional = true)
	@JsonProperty("id")
	private RoadSegmentReferenceID id;
	@Asn1Property(tag = 2, name = "anchor", optional = true)
	@JsonProperty("anchor")
	private Position3D anchor;
	@Asn1Property(tag = 3, name = "laneWidth", optional = true)
	@JsonProperty("laneWidth")
	private LaneWidth laneWidth;
	@Asn1Property(tag = 4, name = "directionality", optional = true)
	@JsonProperty("directionality")
	private DirectionOfUse directionality;
	@Asn1Property(tag = 5, name = "closedPath", optional = true)
	@JsonProperty("closedPath")
	private Asn1Boolean closedPath;
	@Asn1Property(tag = 6, name = "direction", optional = true)
	@JsonProperty("direction")
	private HeadingSlice direction;
	@Asn1Property(tag = 7, name = "description", optional = true)
	@JsonProperty("description")
	private DescriptionChoice description;
	@Asn1Property(tag = 8, name = "regional", optional = true)
	@JsonProperty("regional")
	@JacksonXmlElementWrapper(localName = "regional")
	@JacksonXmlProperty(localName = "Reg-GeographicalPath")
	private SequenceOfRegional regional;

	@Getter
	@Setter
	@JsonInclude(Include.NON_NULL)
	public static class DescriptionChoice extends Asn1Choice {
		@Asn1Property(tag = 0, name = "path")
		@JsonProperty("path")
		private OffsetSystem path;
		@Asn1Property(tag = 1, name = "geometry")
		@JsonProperty("geometry")
		private GeometricProjection geometry;
		@Asn1Property(tag = 2, name = "oldRegion")
		@JsonProperty("oldRegion")
		private ValidRegion oldRegion;

		public DescriptionChoice() {
			super(true);
		}
	}

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfRegional extends Asn1SequenceOf<Reg_GeographicalPath> {
		public SequenceOfRegional() {
			super(Reg_GeographicalPath.class, 1L, 4L);
		}
	}

	public GeographicalPath() {
		super(true);
	}
}