/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.J2540ITIS;

import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.AbstractMap.SimpleEntry;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;
import us.dot.its.jpo.asn.runtime.types.Asn1Integer;

public class MUTCDLocations extends Asn1Integer {

  private static final Map<String, Long> nameValueMap =
      Map.ofEntries(
          new SimpleEntry<>("ahead", 13569L),
          new SimpleEntry<>("here", 13570L),
          new SimpleEntry<>("here-to", 13571L),
          new SimpleEntry<>("here-to-alley", 13572L),
          new SimpleEntry<>("here-to-corner", 13573L),
          new SimpleEntry<>("here-to-sign", 13574L),
          new SimpleEntry<>("between-signs", 13575L),
          new SimpleEntry<>("between", 13633L),
          new SimpleEntry<>("this-side-of-street", 13576L),
          new SimpleEntry<>("this-side-of-sign", 13577L),
          new SimpleEntry<>("right", 13579L),
          new SimpleEntry<>("left", 13580L),
          new SimpleEntry<>("begin-point", 13581L),
          new SimpleEntry<>("next", 13582L),
          new SimpleEntry<>("starting-start", 13611L),
          new SimpleEntry<>("ends-end", 13583L),
          new SimpleEntry<>("other-Side", 13584L),
          new SimpleEntry<>("crossing", 13585L),
          new SimpleEntry<>("crosswalks", 13586L),
          new SimpleEntry<>("center-strip", 13587L),
          new SimpleEntry<>("lane", 13588L),
          new SimpleEntry<>("shelter", 13634L),
          new SimpleEntry<>("center", 13635L),
          new SimpleEntry<>("hill", 13589L),
          new SimpleEntry<>("both-ways-left-and-right", 13590L),
          new SimpleEntry<>("both-ways-45-degree-angle-tilting-right", 13591L),
          new SimpleEntry<>("both-ways-45-degree-angle-tilting-left", 13592L),
          new SimpleEntry<>("both-directions-of-travel", 13593L),
          new SimpleEntry<>("left-arrow", 13610L),
          new SimpleEntry<>("left-turn", 13594L),
          new SimpleEntry<>("left-45-degree-arrow", 13595L),
          new SimpleEntry<>("left-45-degree-turn", 13596L),
          new SimpleEntry<>("ahead-and-to-the-left", 13597L),
          new SimpleEntry<>("ahead-and-to-the-left-at-a-45-degree-angle", 13598L),
          new SimpleEntry<>("right-arrow", 13609L),
          new SimpleEntry<>("right-turn", 13599L),
          new SimpleEntry<>("right-45-degree-arrow", 13600L),
          new SimpleEntry<>("right-45-degree-turn", 13601L),
          new SimpleEntry<>("ahead-and-to-the-right", 13602L),
          new SimpleEntry<>("ahead-and-to-the-right-at-a-45-degree-angle", 13603L),
          new SimpleEntry<>("downward-left-45-degree", 13604L),
          new SimpleEntry<>("downward-right-45-degree", 13605L),
          new SimpleEntry<>("downward-left-and-right-45-degree", 13606L),
          new SimpleEntry<>("reverse-turn-to-right", 13636L),
          new SimpleEntry<>("reverse-turn-to-left", 13637L),
          new SimpleEntry<>("reverse-curve-to-right", 13638L),
          new SimpleEntry<>("reverse-curve-to-left", 13639L),
          new SimpleEntry<>("two-lane-reverse-curve-to-right", 13623L),
          new SimpleEntry<>("two-lane-reverse-curve-to-left", 13624L),
          new SimpleEntry<>("three-lane-reverse-curve-to-right", 13625L),
          new SimpleEntry<>("three-lane-reverse-curve-to-left", 13626L),
          new SimpleEntry<>("winding-road-to-right", 13640L),
          new SimpleEntry<>("winding-road-to-left", 13641L),
          new SimpleEntry<>("chevron-right", 13613L),
          new SimpleEntry<>("chevron-left", 13614L),
          new SimpleEntry<>("right-turn-with-junction", 13615L),
          new SimpleEntry<>("left-turn-with-junction", 13616L),
          new SimpleEntry<>("hairpin-right", 13617L),
          new SimpleEntry<>("hairpin-left", 13618L),
          new SimpleEntry<>("truck-rollover-right", 13619L),
          new SimpleEntry<>("truck-rollover-left", 13620L),
          new SimpleEntry<>("n270-degree-turn-right", 13621L),
          new SimpleEntry<>("n270-degree-turn-left", 13622L),
          new SimpleEntry<>("double-reverse-curve-to-right", 13627L),
          new SimpleEntry<>("double-reverse-curve-to-left", 13628L),
          new SimpleEntry<>("two-lane-double-reverse-curve-to-right", 13629L),
          new SimpleEntry<>("two-lane-double-reverse-curve-to-left", 13630L),
          new SimpleEntry<>("three-lane-double-reverse-curve-to-right", 13631L),
          new SimpleEntry<>("three-lane-double-reverse-curve-to-left", 13632L));
  private static final Map<Long, String> valueNameMap =
      nameValueMap.entrySet().stream()
          .collect(Collectors.toUnmodifiableMap(Map.Entry::getValue, Map.Entry::getKey));

  public MUTCDLocations() {
    super(0L, 65535L);
  }

  @JsonCreator
  public MUTCDLocations(long value) {
    this();
    this.value = value;
  }

  @Override
  public Optional<String> name() {
    return Optional.ofNullable(valueNameMap.get(value));
  }

  public static Optional<MUTCDLocations> named(String name) {
    return Optional.ofNullable(nameValueMap.get(name)).map(MUTCDLocations::new);
  }

  public static Set<String> names() {
    return nameValueMap.keySet();
  }

  public static Set<Long> namedValues() {
    return valueNameMap.keySet();
  }
}
