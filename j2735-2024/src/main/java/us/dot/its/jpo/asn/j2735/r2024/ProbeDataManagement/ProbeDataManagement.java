/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.ProbeDataManagement;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import lombok.Getter;
import lombok.Setter;
import us.dot.its.jpo.asn.j2735.r2024.Common.HeadingSlice;
import us.dot.its.jpo.asn.j2735.r2024.Common.MinuteOfTheYear;
import us.dot.its.jpo.asn.j2735.r2024.REGION.Reg_ProbeDataManagement;
import us.dot.its.jpo.asn.runtime.annotations.Asn1Property;
import us.dot.its.jpo.asn.runtime.types.Asn1Choice;
import us.dot.its.jpo.asn.runtime.types.Asn1Sequence;
import us.dot.its.jpo.asn.runtime.types.Asn1SequenceOf;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class ProbeDataManagement extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "timeStamp", optional = true)
	@JsonProperty("timeStamp")
	private MinuteOfTheYear timeStamp;
	@Asn1Property(tag = 1, name = "sample")
	@JsonProperty("sample")
	private Sample sample;
	@Asn1Property(tag = 2, name = "directions")
	@JsonProperty("directions")
	private HeadingSlice directions;
	@Asn1Property(tag = 3, name = "term")
	@JsonProperty("term")
	private TermChoice term;
	@Asn1Property(tag = 4, name = "snapshot")
	@JsonProperty("snapshot")
	private SnapshotChoice snapshot;
	@Asn1Property(tag = 5, name = "txInterval")
	@JsonProperty("txInterval")
	private SecondOfTime txInterval;
	@Asn1Property(tag = 6, name = "dataElements", optional = true)
	@JsonProperty("dataElements")
	@JacksonXmlElementWrapper(localName = "dataElements")
	@JacksonXmlProperty(localName = "VehicleStatusRequest")
	private VehicleStatusRequestList dataElements;
	@Asn1Property(tag = 7, name = "regional", optional = true)
	@JsonProperty("regional")
	@JacksonXmlElementWrapper(localName = "regional")
	@JacksonXmlProperty(localName = "Reg-ProbeDataManagement")
	private SequenceOfRegional regional;

	@Getter
	@Setter
	@JsonInclude(Include.NON_NULL)
	public static class TermChoice extends Asn1Choice {
		@Asn1Property(tag = 0, name = "termtime")
		@JsonProperty("termtime")
		private TermTime termtime;
		@Asn1Property(tag = 1, name = "termDistance")
		@JsonProperty("termDistance")
		private TermDistance termDistance;

		public TermChoice() {
			super(false);
		}
	}

	@Getter
	@Setter
	@JsonInclude(Include.NON_NULL)
	public static class SnapshotChoice extends Asn1Choice {
		@Asn1Property(tag = 0, name = "snapshotTime")
		@JsonProperty("snapshotTime")
		private SnapshotTime snapshotTime;
		@Asn1Property(tag = 1, name = "snapshotDistance")
		@JsonProperty("snapshotDistance")
		private SnapshotDistance snapshotDistance;

		public SnapshotChoice() {
			super(false);
		}
	}

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfRegional extends Asn1SequenceOf<Reg_ProbeDataManagement> {
		public SequenceOfRegional() {
			super(Reg_ProbeDataManagement.class, 1L, 4L);
		}
	}

	public ProbeDataManagement() {
		super(true);
	}
}