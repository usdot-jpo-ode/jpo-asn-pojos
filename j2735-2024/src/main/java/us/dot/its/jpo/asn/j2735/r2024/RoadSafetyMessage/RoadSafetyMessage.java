/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package us.dot.its.jpo.asn.j2735.r2024.RoadSafetyMessage;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import lombok.Getter;
import lombok.Setter;
import us.dot.its.jpo.asn.runtime.annotations.Asn1Property;
import us.dot.its.jpo.asn.runtime.serialization.SequenceOfChoiceDeserializer;
import us.dot.its.jpo.asn.runtime.serialization.SequenceOfChoiceSerializer;
import us.dot.its.jpo.asn.runtime.types.Asn1Sequence;
import us.dot.its.jpo.asn.runtime.types.Asn1SequenceOf;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class RoadSafetyMessage extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "commonContainer")
	@JsonProperty("commonContainer")
	private CommonContainer commonContainer;
	@Asn1Property(tag = 1, name = "content")
	@JsonProperty("content")
	@JsonSerialize(using = SequenceOfContentSerializer.class)
	@JsonDeserialize(using = SequenceOfContentDeserializer.class)
	private SequenceOfContent content;

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfContent extends Asn1SequenceOf<ContentContainer> {
		public SequenceOfContent() {
			super(ContentContainer.class, 1L, 4L);
		}
	}

	public RoadSafetyMessage() {
		super(true);
	}

	public static class SequenceOfContentSerializer
			extends
				SequenceOfChoiceSerializer<ContentContainer, SequenceOfContent> {
		public SequenceOfContentSerializer() {
			super(ContentContainer.class, SequenceOfContent.class);
		}
	}

	public static class SequenceOfContentDeserializer
			extends
				SequenceOfChoiceDeserializer<ContentContainer, SequenceOfContent> {
		public SequenceOfContentDeserializer() {
			super(ContentContainer.class, SequenceOfContent.class);
		}

		@Override
		protected SequenceOfContent construct() {
			return new SequenceOfContent();
		}
	}
}