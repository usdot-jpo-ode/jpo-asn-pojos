/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.TollUsageMessage;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;
import j2735.Common.DDateTime;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.annotation.JsonProperty;
import asn2pojo.runtime.types.Asn1ObjectIdentifier;
import j2735.TollAdvertisementMessage.VehicleTypes;
import j2735.EfcDataDictionary.VehicleDescription;
import asn2pojo.runtime.types.Asn1Integer;
import com.fasterxml.jackson.annotation.JsonCreator;
import j2735.TollAdvertisementMessage.TollPointID;
import j2735.EfcDataDictionary.PaymentFee;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class TollUserData extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "timeStamp")
	@JsonProperty("timeStamp")
	private DDateTime timeStamp;
	@Asn1Property(tag = 1, name = "tspId")
	@JsonProperty("tspId")
	private Asn1ObjectIdentifier tspId;
	@Asn1Property(tag = 2, name = "vehicleId")
	@JsonProperty("vehicleId")
	private VehicleId vehicleId;
	@Asn1Property(tag = 3, name = "vehType", optional = true)
	@JsonProperty("vehType")
	private VehicleTypes vehType;
	@Asn1Property(tag = 4, name = "vehicleDescription", optional = true)
	@JsonProperty("vehicleDescription")
	private VehicleDescription vehicleDescription;
	@Asn1Property(tag = 5, name = "vehAxlesAndWeight", optional = true)
	@JsonProperty("vehAxlesAndWeight")
	private VehicleAxlesAndWeightInfo vehAxlesAndWeight;
	@Asn1Property(tag = 6, name = "numOccupants", optional = true)
	@JsonProperty("numOccupants")
	private NumOccupantsInteger numOccupants;
	@Asn1Property(tag = 7, name = "entryTollPointId", optional = true)
	@JsonProperty("entryTollPointId")
	private TollPointID entryTollPointId;
	@Asn1Property(tag = 8, name = "entryTimeStamp", optional = true)
	@JsonProperty("entryTimeStamp")
	private DDateTime entryTimeStamp;
	@Asn1Property(tag = 9, name = "locAndTimeStamps", optional = true)
	@JsonProperty("locAndTimeStamps")
	@JacksonXmlElementWrapper(localName = "locAndTimeStamps")
	@JacksonXmlProperty(localName = "LocAndTimeStamp")
	private LocAndTimeStamps locAndTimeStamps;
	@Asn1Property(tag = 10, name = "lastTollPoints", optional = true)
	@JsonProperty("lastTollPoints")
	@JacksonXmlElementWrapper(localName = "lastTollPoints")
	@JacksonXmlProperty(localName = "LastTollPointInfo")
	private LastTollPointInfos lastTollPoints;
	@Asn1Property(tag = 11, name = "charge", optional = true)
	@JsonProperty("charge")
	private PaymentFee charge;

	public static class NumOccupantsInteger extends Asn1Integer {
		public NumOccupantsInteger() {
			super(2L, 5L);
		}

		@JsonCreator
		public NumOccupantsInteger(long value) {
			this();
			this.value = value;
		}
	}

	public TollUserData() {
		super(true);
	}
}