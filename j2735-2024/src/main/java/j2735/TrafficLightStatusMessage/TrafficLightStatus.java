/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.TrafficLightStatusMessage;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.annotation.JsonProperty;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class TrafficLightStatus extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "trafficLightType")
	@JsonProperty("trafficLightType")
	private TrafficLightType trafficLightType;
	@Asn1Property(tag = 1, name = "consecutiveTrafficLight")
	@JsonProperty("consecutiveTrafficLight")
	private ConsecutiveTrafficLight consecutiveTrafficLight;
	@Asn1Property(tag = 2, name = "trafficLightIntervalType")
	@JsonProperty("trafficLightIntervalType")
	private TrafficLightIntervalType trafficLightIntervalType;
	@Asn1Property(tag = 3, name = "pedestrianCall")
	@JsonProperty("pedestrianCall")
	private PedestrianCall pedestrianCall;
	@Asn1Property(tag = 4, name = "actuatedinterval")
	@JsonProperty("actuatedinterval")
	private ActuatedInterval actuatedinterval;
	@Asn1Property(tag = 5, name = "permissiveNonProtected")
	@JsonProperty("permissiveNonProtected")
	private PermissiveNonProtected permissiveNonProtected;
	@Asn1Property(tag = 6, name = "lightingStatus")
	@JsonProperty("lightingStatus")
	private TrafficLightingStatus lightingStatus;
	@Asn1Property(tag = 7, name = "maxIntervalLength")
	@JsonProperty("maxIntervalLength")
	private TimeInSecond_B8 maxIntervalLength;
	@Asn1Property(tag = 8, name = "remainingTime")
	@JsonProperty("remainingTime")
	private TimeInSecond_B8 remainingTime;
	@Asn1Property(tag = 9, name = "directionCode")
	@JsonProperty("directionCode")
	private TrafficLightDirectionCode directionCode;
	@Asn1Property(tag = 10, name = "reserved")
	@JsonProperty("reserved")
	private ReservedBit reserved;

	TrafficLightStatus() {
		super(true);
	}
}