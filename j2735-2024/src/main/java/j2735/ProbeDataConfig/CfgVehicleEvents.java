/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.ProbeDataConfig;

import asn2pojo.runtime.annotations.Asn1Property;
import asn2pojo.runtime.types.Asn1Boolean;
import asn2pojo.runtime.types.Asn1Integer;
import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Getter;
import lombok.Setter;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class CfgVehicleEvents extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "headLights", optional = true)
	@JsonProperty("headLights")
	private Asn1Boolean headLights;
	@Asn1Property(tag = 1, name = "fogLights", optional = true)
	@JsonProperty("fogLights")
	private Asn1Boolean fogLights;
	@Asn1Property(tag = 2, name = "hazardLights", optional = true)
	@JsonProperty("hazardLights")
	private Asn1Boolean hazardLights;
	@Asn1Property(tag = 3, name = "kinematicEvents", optional = true)
	@JsonProperty("kinematicEvents")
	private CfgKinematicEvents kinematicEvents;
	@Asn1Property(tag = 4, name = "wiperStatusChange", optional = true)
	@JsonProperty("wiperStatusChange")
	private Asn1Boolean wiperStatusChange;
	@Asn1Property(tag = 5, name = "lowSpeed", optional = true)
	@JsonProperty("lowSpeed")
	private CfgLowSpeedCriteria lowSpeed;
	@Asn1Property(tag = 6, name = "resumedSpeed", optional = true)
	@JsonProperty("resumedSpeed")
	private ResumedSpeedInteger resumedSpeed;
	@Asn1Property(tag = 7, name = "vehEntrsExitsRegion", optional = true)
	@JsonProperty("vehEntrsExitsRegion")
	private Asn1Boolean vehEntrsExitsRegion;
	@Asn1Property(tag = 8, name = "emerVehDetect", optional = true)
	@JsonProperty("emerVehDetect")
	private Asn1Boolean emerVehDetect;
	@Asn1Property(tag = 9, name = "emerAndTransInfo", optional = true)
	@JsonProperty("emerAndTransInfo")
	private CfgEmerAndTransitInfo emerAndTransInfo;
	@Asn1Property(tag = 10, name = "v2xMsgRecption", optional = true)
	@JsonProperty("v2xMsgRecption")
	private CfgMsgRecepIndicators v2xMsgRecption;
	@Asn1Property(tag = 11, name = "driverAlertsAndWarnings", optional = true)
	@JsonProperty("driverAlertsAndWarnings")
	private Asn1Boolean driverAlertsAndWarnings;

	public static class ResumedSpeedInteger extends Asn1Integer {
		public ResumedSpeedInteger() {
			super(1L, 100L);
		}

		@JsonCreator
		public ResumedSpeedInteger(long value) {
			this();
			this.value = value;
		}
	}

	public CfgVehicleEvents() {
		super(true);
	}
}