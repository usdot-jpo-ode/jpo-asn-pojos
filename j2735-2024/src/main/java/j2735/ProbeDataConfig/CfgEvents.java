/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.ProbeDataConfig;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.types.Asn1Boolean;
import lombok.Getter;
import lombok.Setter;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.annotation.JsonProperty;
import asn2pojo.runtime.types.Asn1Integer;
import com.fasterxml.jackson.annotation.JsonCreator;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class CfgEvents extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "absActivated", optional = true)
	@JsonProperty("absActivated")
	private Asn1Boolean absActivated;
	@Asn1Property(tag = 1, name = "tractionCtlLoss", optional = true)
	@JsonProperty("tractionCtlLoss")
	private Asn1Boolean tractionCtlLoss;
	@Asn1Property(tag = 2, name = "stabilityCtlActivated", optional = true)
	@JsonProperty("stabilityCtlActivated")
	private Asn1Boolean stabilityCtlActivated;
	@Asn1Property(tag = 3, name = "hardBraking", optional = true)
	@JsonProperty("hardBraking")
	private Asn1Boolean hardBraking;
	@Asn1Property(tag = 4, name = "swerveThreshold", optional = true)
	@JsonProperty("swerveThreshold")
	private SwerveThresholdInteger swerveThreshold;

	public static class SwerveThresholdInteger extends Asn1Integer {
		public SwerveThresholdInteger() {
			super(1L, 50L);
		}

		@JsonCreator
		public SwerveThresholdInteger(long value) {
			this();
			this.value = value;
		}
	}

	CfgEvents() {
		super(true);
	}
}