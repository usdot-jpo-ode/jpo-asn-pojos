/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.ProbeDataConfig;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.types.Asn1Boolean;
import lombok.Getter;
import lombok.Setter;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.annotation.JsonProperty;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class CfgRoadSignTypes extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "whiteOnGreen", optional = true)
	@JsonProperty("whiteOnGreen")
	private Asn1Boolean whiteOnGreen;
	@Asn1Property(tag = 1, name = "blackOnYellow", optional = true)
	@JsonProperty("blackOnYellow")
	private Asn1Boolean blackOnYellow;
	@Asn1Property(tag = 2, name = "blackOnOrange", optional = true)
	@JsonProperty("blackOnOrange")
	private Asn1Boolean blackOnOrange;
	@Asn1Property(tag = 3, name = "whiteOnRed", optional = true)
	@JsonProperty("whiteOnRed")
	private Asn1Boolean whiteOnRed;
	@Asn1Property(tag = 4, name = "blackOnWhite", optional = true)
	@JsonProperty("blackOnWhite")
	private Asn1Boolean blackOnWhite;
	@Asn1Property(tag = 5, name = "octagon", optional = true)
	@JsonProperty("octagon")
	private Asn1Boolean octagon;
	@Asn1Property(tag = 6, name = "eqlatTriangle", optional = true)
	@JsonProperty("eqlatTriangle")
	private Asn1Boolean eqlatTriangle;
	@Asn1Property(tag = 7, name = "circle", optional = true)
	@JsonProperty("circle")
	private Asn1Boolean circle;
	@Asn1Property(tag = 8, name = "pennant", optional = true)
	@JsonProperty("pennant")
	private Asn1Boolean pennant;
	@Asn1Property(tag = 9, name = "pentagon", optional = true)
	@JsonProperty("pentagon")
	private Asn1Boolean pentagon;
	@Asn1Property(tag = 10, name = "crossbuck", optional = true)
	@JsonProperty("crossbuck")
	private Asn1Boolean crossbuck;
	@Asn1Property(tag = 11, name = "diamond", optional = true)
	@JsonProperty("diamond")
	private Asn1Boolean diamond;
	@Asn1Property(tag = 12, name = "trapezoid", optional = true)
	@JsonProperty("trapezoid")
	private Asn1Boolean trapezoid;
	@Asn1Property(tag = 13, name = "other", optional = true)
	@JsonProperty("other")
	private Asn1Boolean other;

	public CfgRoadSignTypes() {
		super(true);
	}
}