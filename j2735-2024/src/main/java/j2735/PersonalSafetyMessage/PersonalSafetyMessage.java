/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.PersonalSafetyMessage;

import asn2pojo.runtime.annotations.Asn1Property;
import asn2pojo.runtime.types.Asn1Sequence;
import asn2pojo.runtime.types.Asn1SequenceOf;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import j2735.Common.AccelerationSet4Way;
import j2735.Common.DSecond;
import j2735.Common.Heading;
import j2735.Common.MsgCount;
import j2735.Common.PathHistory;
import j2735.Common.PathPrediction;
import j2735.Common.Position3D;
import j2735.Common.PositionalAccuracy;
import j2735.Common.TemporaryID;
import j2735.Common.Velocity;
import j2735.REGION.Reg_PersonalSafetyMessage;
import lombok.Getter;
import lombok.Setter;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class PersonalSafetyMessage extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "basicType")
	@JsonProperty("basicType")
	private PersonalDeviceUserType basicType;
	@Asn1Property(tag = 1, name = "secMark")
	@JsonProperty("secMark")
	private DSecond secMark;
	@Asn1Property(tag = 2, name = "msgCnt")
	@JsonProperty("msgCnt")
	private MsgCount msgCnt;
	@Asn1Property(tag = 3, name = "id")
	@JsonProperty("id")
	private TemporaryID id;
	@Asn1Property(tag = 4, name = "position")
	@JsonProperty("position")
	private Position3D position;
	@Asn1Property(tag = 5, name = "accuracy")
	@JsonProperty("accuracy")
	private PositionalAccuracy accuracy;
	@Asn1Property(tag = 6, name = "speed")
	@JsonProperty("speed")
	private Velocity speed;
	@Asn1Property(tag = 7, name = "heading")
	@JsonProperty("heading")
	private Heading heading;
	@Asn1Property(tag = 8, name = "accelSet", optional = true)
	@JsonProperty("accelSet")
	private AccelerationSet4Way accelSet;
	@Asn1Property(tag = 9, name = "pathHistory", optional = true)
	@JsonProperty("pathHistory")
	private PathHistory pathHistory;
	@Asn1Property(tag = 10, name = "pathPrediction", optional = true)
	@JsonProperty("pathPrediction")
	private PathPrediction pathPrediction;
	@Asn1Property(tag = 11, name = "propulsion", optional = true)
	@JsonProperty("propulsion")
	private PropelledInformation propulsion;
	@Asn1Property(tag = 12, name = "useState", optional = true)
	@JsonProperty("useState")
	private PersonalDeviceUsageState useState;
	@Asn1Property(tag = 13, name = "crossRequest", optional = true)
	@JsonProperty("crossRequest")
	private PersonalCrossingRequest crossRequest;
	@Asn1Property(tag = 14, name = "crossState", optional = true)
	@JsonProperty("crossState")
	private PersonalCrossingInProgress crossState;
	@Asn1Property(tag = 15, name = "clusterSize", optional = true)
	@JsonProperty("clusterSize")
	private NumberOfParticipantsInCluster clusterSize;
	@Asn1Property(tag = 16, name = "clusterRadius", optional = true)
	@JsonProperty("clusterRadius")
	private PersonalClusterRadius clusterRadius;
	@Asn1Property(tag = 17, name = "eventResponderType", optional = true)
	@JsonProperty("eventResponderType")
	private PublicSafetyEventResponderWorkerType eventResponderType;
	@Asn1Property(tag = 18, name = "activityType", optional = true)
	@JsonProperty("activityType")
	private PublicSafetyAndRoadWorkerActivity activityType;
	@Asn1Property(tag = 19, name = "activitySubType", optional = true)
	@JsonProperty("activitySubType")
	private PublicSafetyDirectingTrafficSubType activitySubType;
	@Asn1Property(tag = 20, name = "assistType", optional = true)
	@JsonProperty("assistType")
	private PersonalAssistive assistType;
	@Asn1Property(tag = 21, name = "sizing", optional = true)
	@JsonProperty("sizing")
	private UserSizeAndBehaviour sizing;
	@Asn1Property(tag = 22, name = "attachment", optional = true)
	@JsonProperty("attachment")
	private Attachment attachment;
	@Asn1Property(tag = 23, name = "attachmentRadius", optional = true)
	@JsonProperty("attachmentRadius")
	private AttachmentRadius attachmentRadius;
	@Asn1Property(tag = 24, name = "animalType", optional = true)
	@JsonProperty("animalType")
	private AnimalType animalType;
	@Asn1Property(tag = 25, name = "regional", optional = true)
	@JsonProperty("regional")
	@JacksonXmlElementWrapper(localName = "regional")
	@JacksonXmlProperty(localName = "Reg-PersonalSafetyMessage")
	private SequenceOfRegional regional;

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfRegional extends Asn1SequenceOf<Reg_PersonalSafetyMessage> {
		public SequenceOfRegional() {
			super(Reg_PersonalSafetyMessage.class, 1L, 4L);
		}
	}

	public PersonalSafetyMessage() {
		super(true);
	}
}