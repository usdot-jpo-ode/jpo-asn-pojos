/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.MapData;

import asn2pojo.runtime.types.Asn1Bitstring;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

@JsonDeserialize(using = LaneAttributes_ParkingDeserializer.class)
public class LaneAttributes_Parking extends Asn1Bitstring {

	public boolean isParkingRevocableLane() {
		return get(0);
	}

	public void setParkingRevocableLane(boolean parkingRevocableLane) {
		set(0, parkingRevocableLane);
	}

	public boolean isParallelParkingInUse() {
		return get(1);
	}

	public void setParallelParkingInUse(boolean parallelParkingInUse) {
		set(1, parallelParkingInUse);
	}

	public boolean isHeadInParkingInUse() {
		return get(2);
	}

	public void setHeadInParkingInUse(boolean headInParkingInUse) {
		set(2, headInParkingInUse);
	}

	public boolean isDoNotParkZone() {
		return get(3);
	}

	public void setDoNotParkZone(boolean doNotParkZone) {
		set(3, doNotParkZone);
	}

	public boolean isParkingForBusUse() {
		return get(4);
	}

	public void setParkingForBusUse(boolean parkingForBusUse) {
		set(4, parkingForBusUse);
	}

	public boolean isParkingForTaxiUse() {
		return get(5);
	}

	public void setParkingForTaxiUse(boolean parkingForTaxiUse) {
		set(5, parkingForTaxiUse);
	}

	public boolean isNoPublicParkingUse() {
		return get(6);
	}

	public void setNoPublicParkingUse(boolean noPublicParkingUse) {
		set(6, noPublicParkingUse);
	}

	public LaneAttributes_Parking() {
		super(16, false, new String[]{"parkingRevocableLane", "parallelParkingInUse", "headInParkingInUse",
				"doNotParkZone", "parkingForBusUse", "parkingForTaxiUse", "noPublicParkingUse"});
	}
}