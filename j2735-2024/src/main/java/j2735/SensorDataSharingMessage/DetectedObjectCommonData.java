/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.SensorDataSharingMessage;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.annotation.JsonProperty;
import j2735.Common.TimeConfidence;
import j2735.Common.PositionConfidenceSet;
import j2735.Common.Speed;
import j2735.Common.SpeedConfidence;
import j2735.Common.Heading;
import j2735.Common.HeadingConfidence;
import j2735.Common.AccelerationSet4Way;
import j2735.ProbeVehicleData.AccelerationConfidence;
import j2735.ProbeVehicleData.YawRateConfidence;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class DetectedObjectCommonData extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "objType")
	@JsonProperty("objType")
	private ObjectType objType;
	@Asn1Property(tag = 1, name = "objTypeCfd")
	@JsonProperty("objTypeCfd")
	private ClassificationConfidence objTypeCfd;
	@Asn1Property(tag = 2, name = "objectID")
	@JsonProperty("objectID")
	private ObjectID objectID;
	@Asn1Property(tag = 3, name = "measurementTime")
	@JsonProperty("measurementTime")
	private MeasurementTimeOffset measurementTime;
	@Asn1Property(tag = 4, name = "timeConfidence")
	@JsonProperty("timeConfidence")
	private TimeConfidence timeConfidence;
	@Asn1Property(tag = 5, name = "pos")
	@JsonProperty("pos")
	private PositionOffsetXYZ pos;
	@Asn1Property(tag = 6, name = "posConfidence")
	@JsonProperty("posConfidence")
	private PositionConfidenceSet posConfidence;
	@Asn1Property(tag = 7, name = "speed")
	@JsonProperty("speed")
	private Speed speed;
	@Asn1Property(tag = 8, name = "speedConfidence")
	@JsonProperty("speedConfidence")
	private SpeedConfidence speedConfidence;
	@Asn1Property(tag = 9, name = "speedZ", optional = true)
	@JsonProperty("speedZ")
	private Speed speedZ;
	@Asn1Property(tag = 10, name = "speedConfidenceZ", optional = true)
	@JsonProperty("speedConfidenceZ")
	private SpeedConfidence speedConfidenceZ;
	@Asn1Property(tag = 11, name = "heading")
	@JsonProperty("heading")
	private Heading heading;
	@Asn1Property(tag = 12, name = "headingConf")
	@JsonProperty("headingConf")
	private HeadingConfidence headingConf;
	@Asn1Property(tag = 13, name = "accel4way", optional = true)
	@JsonProperty("accel4way")
	private AccelerationSet4Way accel4way;
	@Asn1Property(tag = 14, name = "accCfdX", optional = true)
	@JsonProperty("accCfdX")
	private AccelerationConfidence accCfdX;
	@Asn1Property(tag = 15, name = "accCfdY", optional = true)
	@JsonProperty("accCfdY")
	private AccelerationConfidence accCfdY;
	@Asn1Property(tag = 16, name = "accCfdZ", optional = true)
	@JsonProperty("accCfdZ")
	private AccelerationConfidence accCfdZ;
	@Asn1Property(tag = 17, name = "accCfdYaw", optional = true)
	@JsonProperty("accCfdYaw")
	private YawRateConfidence accCfdYaw;

	DetectedObjectCommonData() {
		super(true);
	}
}