/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.ProbeDataReport;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;
import j2735.Common.DDateTime;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.annotation.JsonProperty;
import j2735.Common.Position3D;
import j2735.Common.PositionalAccuracy;
import j2735.Common.VehicleSize;
import j2735.Common.VehicleMass;
import asn2pojo.runtime.types.Asn1Integer;
import com.fasterxml.jackson.annotation.JsonCreator;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class ReportCharacteristics extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "timeStamp")
	@JsonProperty("timeStamp")
	private DDateTime timeStamp;
	@Asn1Property(tag = 1, name = "position")
	@JsonProperty("position")
	private Position3D position;
	@Asn1Property(tag = 2, name = "posAccuracy")
	@JsonProperty("posAccuracy")
	private PositionalAccuracy posAccuracy;
	@Asn1Property(tag = 3, name = "velocity")
	@JsonProperty("velocity")
	private RptVelocity velocity;
	@Asn1Property(tag = 4, name = "vehicleClass", optional = true)
	@JsonProperty("vehicleClass")
	private RptVehicleClass vehicleClass;
	@Asn1Property(tag = 5, name = "devType", optional = true)
	@JsonProperty("devType")
	private RptDevType devType;
	@Asn1Property(tag = 6, name = "vehicleSize", optional = true)
	@JsonProperty("vehicleSize")
	private VehicleSize vehicleSize;
	@Asn1Property(tag = 7, name = "vehicleMass", optional = true)
	@JsonProperty("vehicleMass")
	private VehicleMass vehicleMass;
	@Asn1Property(tag = 8, name = "vehPassengerCount", optional = true)
	@JsonProperty("vehPassengerCount")
	private VehPassengerCountInteger vehPassengerCount;

	public static class VehPassengerCountInteger extends Asn1Integer {
		public VehPassengerCountInteger() {
			super(1L, 255L);
		}

		@JsonCreator
		public VehPassengerCountInteger(long value) {
			this();
			this.value = value;
		}
	}

	public ReportCharacteristics() {
		super(true);
	}
}