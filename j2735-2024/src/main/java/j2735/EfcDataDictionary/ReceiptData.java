/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.EfcDataDictionary;

import asn2pojo.runtime.annotations.Asn1Property;
import asn2pojo.runtime.types.Asn1Integer;
import asn2pojo.runtime.types.Asn1OctetString;
import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Getter;
import lombok.Setter;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class ReceiptData extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "sessionTime")
	@JsonProperty("sessionTime")
	private DateAndTime sessionTime;
	@Asn1Property(tag = 1, name = "sessionServiceProvider")
	@JsonProperty("sessionServiceProvider")
	private Provider sessionServiceProvider;
	@Asn1Property(tag = 2, name = "locationOfStation")
	@JsonProperty("locationOfStation")
	private Int2Unsigned locationOfStation;
	@Asn1Property(tag = 3, name = "sessionLocation")
	@JsonProperty("sessionLocation")
	private SessionLocation sessionLocation;
	@Asn1Property(tag = 4, name = "sessionType")
	@JsonProperty("sessionType")
	private Int1Unsigned sessionType;
	@Asn1Property(tag = 5, name = "sessionResult")
	@JsonProperty("sessionResult")
	private ResultOp sessionResult;
	@Asn1Property(tag = 6, name = "sessionTariffClass")
	@JsonProperty("sessionTariffClass")
	private Int1Unsigned sessionTariffClass;
	@Asn1Property(tag = 7, name = "sessionClaimedClass")
	@JsonProperty("sessionClaimedClass")
	private Int1Unsigned sessionClaimedClass;
	@Asn1Property(tag = 8, name = "sessionFee")
	@JsonProperty("sessionFee")
	private PaymentFee sessionFee;
	@Asn1Property(tag = 9, name = "sessionContractProvider")
	@JsonProperty("sessionContractProvider")
	private Provider sessionContractProvider;
	@Asn1Property(tag = 10, name = "sessionTypeOfContract")
	@JsonProperty("sessionTypeOfContract")
	private SessionTypeOfContractOctetString sessionTypeOfContract;
	@Asn1Property(tag = 11, name = "sessionContextVersion")
	@JsonProperty("sessionContextVersion")
	private SessionContextVersionInteger sessionContextVersion;
	@Asn1Property(tag = 12, name = "receiptDataAuthenticator")
	@JsonProperty("receiptDataAuthenticator")
	private ReceiptDataAuthenticatorOctetString receiptDataAuthenticator;

	public static class SessionTypeOfContractOctetString extends Asn1OctetString {
		public SessionTypeOfContractOctetString() {
			super(2, 2);
		}

		@JsonCreator
		public SessionTypeOfContractOctetString(String value) {
			this();
			setValue(value);
		}
	}

	public static class SessionContextVersionInteger extends Asn1Integer {
		public SessionContextVersionInteger() {
			super(0L, 127L);
		}

		@JsonCreator
		public SessionContextVersionInteger(long value) {
			this();
			this.value = value;
		}
	}

	public static class ReceiptDataAuthenticatorOctetString extends Asn1OctetString {
		public ReceiptDataAuthenticatorOctetString() {
			super(4, 4);
		}

		@JsonCreator
		public ReceiptDataAuthenticatorOctetString(String value) {
			this();
			setValue(value);
		}
	}

	public ReceiptData() {
		super(false);
	}
}