/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.TollAdvertisementMessage;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.types.Asn1Integer;
import com.fasterxml.jackson.annotation.JsonCreator;
import lombok.Getter;
import lombok.Setter;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.annotation.JsonProperty;
import asn2pojo.runtime.types.Asn1Enumerated;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import asn2pojo.runtime.serialization.EnumeratedSerializer;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import asn2pojo.runtime.serialization.EnumeratedDeserializer;
import j2735.EfcDataDictionary.PaymentFee;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class TotalWeightCharges extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "weightLimit")
	@JsonProperty("weightLimit")
	private WeightLimitInteger weightLimit;
	@Asn1Property(tag = 1, name = "weightLimitUnits")
	@JsonProperty("weightLimitUnits")
	private EnumeratedWeightLimitUnits weightLimitUnits;
	@Asn1Property(tag = 2, name = "weightCharge")
	@JsonProperty("weightCharge")
	private PaymentFee weightCharge;

	public static class WeightLimitInteger extends Asn1Integer {
		public WeightLimitInteger() {
			super(0L, 16777215L);
		}

		@JsonCreator
		public WeightLimitInteger(long value) {
			this();
			this.value = value;
		}
	}

	@Getter
	@JsonSerialize(using = EnumeratedWeightLimitUnitsSerializer.class)
	@JsonDeserialize(using = EnumeratedWeightLimitUnitsDeserializer.class)
	public static enum EnumeratedWeightLimitUnits implements Asn1Enumerated {
		POUNDS(0, "pounds"), KILOGRAMS(1, "kilograms");

		private final int index;
		private final String name;

		public boolean hasExtensionMarker() {
			return false;
		}

		private EnumeratedWeightLimitUnits(int index, String name) {
			this.index = index;
			this.name = name;
		}

		public int maxIndex() {
			return 1;
		}
	}

	public static class EnumeratedWeightLimitUnitsSerializer extends EnumeratedSerializer<EnumeratedWeightLimitUnits> {
		EnumeratedWeightLimitUnitsSerializer() {
			super(EnumeratedWeightLimitUnits.class);
		}
	}

	public static class EnumeratedWeightLimitUnitsDeserializer
			extends
				EnumeratedDeserializer<EnumeratedWeightLimitUnits> {
		EnumeratedWeightLimitUnitsDeserializer() {
			super(EnumeratedWeightLimitUnits.class);
		}

		@Override
		protected EnumeratedWeightLimitUnits[] listEnumValues() {
			return EnumeratedWeightLimitUnits.values();
		}
	}

	TotalWeightCharges() {
		super(true);
	}
}