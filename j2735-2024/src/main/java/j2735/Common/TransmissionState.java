/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.Common;

import lombok.Getter;
import asn2pojo.runtime.types.Asn1Enumerated;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

@Getter
@JsonSerialize(using = TransmissionStateSerializer.class)
@JsonDeserialize(using = TransmissionStateDeserializer.class)
public enum TransmissionState implements Asn1Enumerated {
	NEUTRAL(0, "neutral"), PARK(1, "park"), FORWARDGEARS(2, "forwardGears"), REVERSEGEARS(3, "reverseGears"), RESERVED1(
			4, "reserved1"), RESERVED2(5, "reserved2"), RESERVED3(6, "reserved3"), UNAVAILABLE(7, "unavailable");

	private final int index;
	private final String name;

	public boolean hasExtensionMarker() {
		return false;
	}

	private TransmissionState(int index, String name) {
		this.index = index;
		this.name = name;
	}

	public int maxIndex() {
		return 7;
	}
}