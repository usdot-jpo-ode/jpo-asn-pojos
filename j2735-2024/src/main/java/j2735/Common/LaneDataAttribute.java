/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.Common;

import asn2pojo.runtime.types.Asn1Choice;
import lombok.Getter;
import lombok.Setter;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.annotation.JsonProperty;
import j2735.REGION.Reg_LaneDataAttribute;
import asn2pojo.runtime.types.Asn1SequenceOf;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;

@Getter
@Setter
@JsonInclude(Include.NON_NULL)
public class LaneDataAttribute extends Asn1Choice {

	@Asn1Property(tag = 0, name = "pathEndPointAngle")
	@JsonProperty("pathEndPointAngle")
	private DeltaAngle pathEndPointAngle;
	@Asn1Property(tag = 1, name = "laneCrownPointCenter")
	@JsonProperty("laneCrownPointCenter")
	private RoadwayCrownAngle laneCrownPointCenter;
	@Asn1Property(tag = 2, name = "laneCrownPointLeft")
	@JsonProperty("laneCrownPointLeft")
	private RoadwayCrownAngle laneCrownPointLeft;
	@Asn1Property(tag = 3, name = "laneCrownPointRight")
	@JsonProperty("laneCrownPointRight")
	private RoadwayCrownAngle laneCrownPointRight;
	@Asn1Property(tag = 4, name = "laneAngle")
	@JsonProperty("laneAngle")
	private MergeDivergeNodeAngle laneAngle;
	@Asn1Property(tag = 5, name = "speedLimits")
	@JsonProperty("speedLimits")
	@JacksonXmlElementWrapper(localName = "speedLimits")
	@JacksonXmlProperty(localName = "RegulatorySpeedLimit")
	private SpeedLimitList speedLimits;
	@Asn1Property(tag = 6, name = "regional")
	@JsonProperty("regional")
	private SequenceOfRegional regional;

	LaneDataAttribute() {
		super(true);
	}

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfRegional extends Asn1SequenceOf<Reg_LaneDataAttribute> {
		SequenceOfRegional() {
			super(j2735.REGION.Reg_LaneDataAttribute.class, 1L, 4L);
		}
	}
}