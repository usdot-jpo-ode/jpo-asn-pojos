/*==============================================================================
 *
 * This source file was generated by a tool.
 * Beware manual edits might be overwritten in future releases.
 * asn1jvm v1.0-SNAPSHOT
 *
 *------------------------------------------------------------------------------
 * Copyright 2024 USDOT
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *============================================================================*/

package j2735.RoadUserChargingConfigMessage;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.annotation.JsonProperty;
import asn2pojo.runtime.types.Asn1Enumerated;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import asn2pojo.runtime.serialization.EnumeratedSerializer;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import asn2pojo.runtime.serialization.EnumeratedDeserializer;
import asn2pojo.runtime.types.Asn1SequenceOf;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class ChargingConfig extends Asn1Sequence {

	@Asn1Property(tag = 0, name = "configInfo")
	@JsonProperty("configInfo")
	private ConfigInfo configInfo;
	@Asn1Property(tag = 1, name = "reportSched")
	@JsonProperty("reportSched")
	private EnumeratedReportSched reportSched;
	@Asn1Property(tag = 2, name = "byPrimaryRegion")
	@JsonProperty("byPrimaryRegion")
	private PrimaryRegionChargingInfo byPrimaryRegion;
	@Asn1Property(tag = 3, name = "bySubRegion", optional = true)
	@JsonProperty("bySubRegion")
	private SequenceOfBySubRegion bySubRegion;
	@Asn1Property(tag = 4, name = "byAreaOrSegment", optional = true)
	@JsonProperty("byAreaOrSegment")
	private AreaOrSegmentChargingInfo byAreaOrSegment;

	@Getter
	@JsonSerialize(using = EnumeratedReportSchedSerializer.class)
	@JsonDeserialize(using = EnumeratedReportSchedDeserializer.class)
	public static enum EnumeratedReportSched implements Asn1Enumerated {
		HOURLY(0, "hourly"), WEEKLY(1, "weekly"), MONTHLY(2, "monthly"), QUARTERLY(3, "quarterly");

		private final int index;
		private final String name;

		public boolean hasExtensionMarker() {
			return false;
		}

		private EnumeratedReportSched(int index, String name) {
			this.index = index;
			this.name = name;
		}

		public int maxIndex() {
			return 3;
		}
	}

	public static class EnumeratedReportSchedSerializer extends EnumeratedSerializer<EnumeratedReportSched> {
		EnumeratedReportSchedSerializer() {
			super(EnumeratedReportSched.class);
		}
	}

	public static class EnumeratedReportSchedDeserializer extends EnumeratedDeserializer<EnumeratedReportSched> {
		EnumeratedReportSchedDeserializer() {
			super(EnumeratedReportSched.class);
		}

		@Override
		protected EnumeratedReportSched[] listEnumValues() {
			return EnumeratedReportSched.values();
		}
	}

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfBySubRegion extends Asn1SequenceOf<SubRegionChargingInfo> {
		public SequenceOfBySubRegion() {
			super(SubRegionChargingInfo.class, 1L, 999L);
		}
	}

	public ChargingConfig() {
		super(true);
	}
}